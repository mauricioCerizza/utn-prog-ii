"use strict";(self.webpackChunkutn_prog_ii=self.webpackChunkutn_prog_ii||[]).push([[396],{3905:function(e,a,n){n.d(a,{Zo:function(){return p},kt:function(){return m}});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),c=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},p=function(e){var a=c(e.components);return t.createElement(s.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?t.createElement(k,i(i({ref:a},p),{},{components:n})):t.createElement(k,i({ref:a},p))}));function m(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7066:function(e,a,n){n.r(a),n.d(a,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var t=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_label:"Trabajando con la consola",slug:"/clases/introduccion/apuntes/input-output",hide_table_of_contents:!1,hide_title:!0,author:"Mauricio Cerizza",authorURL:"https://github.com/mauricioCerizza"},s=void 0,c={unversionedId:"clases/introduccion/Apuntes/input-output",id:"clases/introduccion/Apuntes/input-output",isDocsHomePage:!1,title:"input-output",description:"Trabajando con la consola",source:"@site/docs/clases/01-introduccion/Apuntes/04-input-output.md",sourceDirName:"clases/01-introduccion/Apuntes",slug:"/clases/introduccion/apuntes/input-output",permalink:"/utn-prog-ii/docs/clases/introduccion/apuntes/input-output",version:"current",lastUpdatedBy:"mauriciocerizza",lastUpdatedAt:1629557261,formattedLastUpdatedAt:"8/21/2021",sidebarPosition:4,frontMatter:{sidebar_label:"Trabajando con la consola",slug:"/clases/introduccion/apuntes/input-output",hide_table_of_contents:!1,hide_title:!0,author:"Mauricio Cerizza",authorURL:"https://github.com/mauricioCerizza"},sidebar:"Clases",previous:{title:"Introducci\xf3n a C#",permalink:"/utn-prog-ii/docs/clases/introduccion/apuntes/introduccion-c-sharp"},next:{title:"Cuestionario",permalink:"/utn-prog-ii/docs/clases/introduccion/apuntes/cuestionario"}},p=[{value:"Trabajando con la consola",id:"trabajando-con-la-consola",children:[]},{value:"Mostrar datos por consola",id:"mostrar-datos-por-consola",children:[{value:"Dar formato al texto de salida",id:"dar-formato-al-texto-de-salida",children:[]},{value:"Secuencias de escape",id:"secuencias-de-escape",children:[]}]},{value:"Leer datos por consola",id:"leer-datos-por-consola",children:[{value:"Leer una l\xednea de texto",id:"leer-una-l\xednea-de-texto",children:[]},{value:"Leer n\xfameros",id:"leer-n\xfameros",children:[]}]}],d={toc:p};function u(e){var a=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"trabajando-con-la-consola"},"Trabajando con la consola"),(0,o.kt)("p",null,"Las aplicaciones de consola se basan en texto y corren sobre la l\xednea de comandos. Se suelen utilizar para ejecutar tareas simples y concretas. Entre sus tareas m\xe1s habituales se encuentra escribir y leer datos. "),(0,o.kt)("h2",{id:"mostrar-datos-por-consola"},"Mostrar datos por consola"),(0,o.kt)("p",null,"Para mostrar texto se utilizan los m\xe9todos ",(0,o.kt)("inlineCode",{parentName:"p"},"Write")," y ",(0,o.kt)("inlineCode",{parentName:"p"},"WriteLine")," de la clase ",(0,o.kt)("inlineCode",{parentName:"p"},"Console")," cuya \xfanica diferencia es que el \xfaltimo genera un salto de l\xednea despu\xe9s de imprimir el texto. "),(0,o.kt)("h3",{id:"dar-formato-al-texto-de-salida"},"Dar formato al texto de salida"),(0,o.kt)("h3",{id:"secuencias-de-escape"},"Secuencias de escape"),(0,o.kt)("p",null,"Dentro de los ",(0,o.kt)("inlineCode",{parentName:"p"},"string")," se puede incluir ",(0,o.kt)("strong",{parentName:"p"},"secuencias de escape")," que se utilizan para representar caracteres especiales. Los caracteres de escape vienen acompa\xf1ados con el prefijo ",(0,o.kt)("inlineCode",{parentName:"p"},"\\")," (contra barra)."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Secuencia de escape"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Descripci\xf3n"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"\\'")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Comilla simple")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},'\\"')),(0,o.kt)("td",{parentName:"tr",align:"left"},"Comilla doble")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"\\\\")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Contra barra")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"\\n")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Nueva l\xednea / Salto de l\xednea")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"\\t")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Tabulaci\xf3n horizontal")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.WriteLine("Texto con salto de l\xednea.\\n")\nConsole.WriteLine("\\tTexto tabulado horizontalmente.");\nConsole.WriteLine("Pongo \\"comillas dobles\\" a mi texto y tambi\xe9n \\\'comillas simples\\\'.");\nConsole.WriteLine("Para trabajar caracteres especiales hay que usar \\\\.");\n')),(0,o.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Texto con salto de l\xednea.\n\n        Texto tabulado horizontalmente.\nPongo \"comillas dobles\" a mi texto y tambi\xe9n 'comillas simples'.\nPara trabajar caracteres especiales hay que usar \\.\n")),(0,o.kt)("p",null,"Tambi\xe9n se pueden escapar todos los caracteres especiales de un texto con el prefijo ",(0,o.kt)("inlineCode",{parentName:"p"},"@"),", que tambi\xe9n sirve para trabajar con texto multi-l\xednea.   "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.WriteLine(@"La ruta al archivo es: C:\\\\usuario\\documentos\\texto.txt");\nConsole.WriteLine(@"\nUn texto\nen m\xe1s de una l\xednea\nes posible con C#\nanteponiendo @ al literal de string.\n");\n')),(0,o.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"La ruta al archivo es: C:\\\\usuario\\documentos\\texto.txt\n\nUn texto\nen m\xe1s de una l\xednea\nes posible con C#\nanteponiendo @ al literal de string.\n")),(0,o.kt)("h2",{id:"leer-datos-por-consola"},"Leer datos por consola"),(0,o.kt)("h3",{id:"leer-una-l\xednea-de-texto"},"Leer una l\xednea de texto"),(0,o.kt)("p",null,"Para tomar un dato ingresado por el usuario se usa el m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"ReadLine")," de la clase ",(0,o.kt)("inlineCode",{parentName:"p"},"Console"),". "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.Write("Ingrese una fruta: ");\nstring fruta = Console.ReadLine();\n\nConsole.WriteLine("Se ingreso la fruta {0}", fruta);\n')),(0,o.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Ingrese una fruta: Banana\nSe ingreso la fruta Banana\n")),(0,o.kt)("h3",{id:"leer-n\xfameros"},"Leer n\xfameros"),(0,o.kt)("p",null,"El m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"ReadLine")," devuelve siempre un ",(0,o.kt)("inlineCode",{parentName:"p"},"string"),". Si trabajamos con n\xfameros tendremos que convertirlos a un tipo num\xe9rico. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.Write("Ingrese un precio: ");\nstring precioIngresado = Console.ReadLine();\n\ndecimal precioSinIva = decimal.Parse(precioIngresado);\n\ndecimal precioFinal = precioSinIva + precioSinIva * 0.21M; \n\nConsole.WriteLine("Se ingreso el precio ${0}, con IVA incluido suma ${1}", precioSinIva, precioFinal);\n')),(0,o.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Ingrese un precio: 12\nSe ingreso el precio 12, con IVA incluido suma 14,52\n")),(0,o.kt)("h4",{id:"aplicar-un-formato-num\xe9rico-estandar"},"Aplicar un formato num\xe9rico estandar"),(0,o.kt)("p",null,"\xbfQu\xe9 pasa si quiero que los precios siempre se muestren con 2 decimales y con el signo de la moneda? Cambio la \xfaltima l\xednea y aplico un ",(0,o.kt)("strong",{parentName:"p"},"formato num\xe9rico estandar"),". "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.WriteLine("Se ingreso el precio {0:C2}, con IVA incluido suma ${1:C2}", precioSinIva, precioFinal);\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},":C2")," es el formato que se aplica sobre el valor en el marcador ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),". ",(0,o.kt)("inlineCode",{parentName:"p"},"C")," se utiliza para formato de monedas y el ",(0,o.kt)("inlineCode",{parentName:"p"},"2")," indica la cantidad de digitos desde el punto decimal que quiero mostrar. "),(0,o.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Ingrese un precio: 12\nSe ingreso el precio $ 12,00, con IVA incluido suma $ 14,52\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Informaci\xf3n")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Para conocer todos los formatos num\xe9ricos estandard visita la ",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-numeric-format-strings"},"documentaci\xf3n oficial"),". "))),(0,o.kt)("h4",{id:"aplicar-un-formato-num\xe9rico-personalizado"},"Aplicar un formato num\xe9rico personalizado"),(0,o.kt)("p",null,"Otra forma de hacer lo mismo es con un ",(0,o.kt)("strong",{parentName:"p"},"formato num\xe9rico personalizado")," "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.WriteLine("Se ingreso el precio {0:$#.00}, con IVA incluido suma ${1:$#.00}", precioSinIva, precioFinal);\n')),(0,o.kt)("p",null,"El signo ",(0,o.kt)("inlineCode",{parentName:"p"},"$")," es un literal fijo. ",(0,o.kt)("inlineCode",{parentName:"p"},"#")," representa un digito siempre que exista, de lo contrario muestra un string vac\xedo. ",(0,o.kt)("inlineCode",{parentName:"p"},".")," es el punto decimal. ",(0,o.kt)("inlineCode",{parentName:"p"},"00")," indica hasta dos decimales, y si hay menos o no existen rellena con ceros. "),(0,o.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Ingrese un precio: 12\nSe ingreso el precio $12,00, con IVA incluido suma $14,52\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Informaci\xf3n")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Para conocer todos los formatos num\xe9ricos personalizados visita la ",(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-numeric-format-strings"},"documentaci\xf3n oficial"),". "))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.Write("Ingrese una fruta: ");\nstring fruta = Console.ReadLine();\n\nConsole.WriteLine("Se ingreso la fruta {0}", fruta);\n')),(0,o.kt)("p",null,"Para obtener la tecla presionada por el usuario se utiliza ",(0,o.kt)("inlineCode",{parentName:"p"},"ReadKey"),"."))}u.isMDXComponent=!0}}]);