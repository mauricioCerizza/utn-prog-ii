"use strict";(self.webpackChunkutn_prog_ii=self.webpackChunkutn_prog_ii||[]).push([[8820],{3905:function(e,a,n){n.d(a,{Zo:function(){return u},kt:function(){return d}});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=t.createContext({}),c=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},u=function(e){var a=c(e.components);return t.createElement(l.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,h=m["".concat(l,".").concat(d)]||m[d]||p[d]||o;return n?t.createElement(h,i(i({ref:a},u),{},{components:n})):t.createElement(h,i({ref:a},u))}));function d(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7661:function(e,a,n){n.r(a),n.d(a,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var t=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],s={sidebar_label:"Programaci\xf3n multi-hilo",slug:"/clases/concurrencia/apuntes/multihilo",hide_table_of_contents:!1,hide_title:!0,author:"Mauricio Cerizza",authorURL:"https://github.com/mauricioCerizza"},l=void 0,c={unversionedId:"clases/concurrencia/Apuntes/multihilo",id:"clases/concurrencia/Apuntes/multihilo",isDocsHomePage:!1,title:"multihilo",description:"Programaci\xf3n multi-hilo",source:"@site/docs/clases/19-concurrencia/Apuntes/01-multihilo.md",sourceDirName:"clases/19-concurrencia/Apuntes",slug:"/clases/concurrencia/apuntes/multihilo",permalink:"/utn-prog-ii/docs/clases/concurrencia/apuntes/multihilo",version:"current",lastUpdatedBy:"mauriciocerizza",lastUpdatedAt:1628364948,formattedLastUpdatedAt:"8/7/2021",sidebarPosition:1,frontMatter:{sidebar_label:"Programaci\xf3n multi-hilo",slug:"/clases/concurrencia/apuntes/multihilo",hide_table_of_contents:!1,hide_title:!0,author:"Mauricio Cerizza",authorURL:"https://github.com/mauricioCerizza"}},u=[{value:"Programaci\xf3n multi-hilo",id:"programaci\xf3n-multi-hilo",children:[{value:"Multitarea apropiativa",id:"multitarea-apropiativa",children:[]},{value:"Programaci\xf3n en paralelo",id:"programaci\xf3n-en-paralelo",children:[]}]},{value:"Resumen de la secci\xf3n",id:"resumen-de-la-secci\xf3n",children:[]}],p={toc:u};function m(e){var a=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"programaci\xf3n-multi-hilo"},"Programaci\xf3n multi-hilo"),(0,o.kt)("p",null,"Un ",(0,o.kt)("strong",{parentName:"p"},"proceso")," es un programa en ejecuci\xf3n que tiene asignados recursos tales como memoria e hilos. "),(0,o.kt)("p",null,"Un ",(0,o.kt)("strong",{parentName:"p"},"hilo <",(0,o.kt)("em",{parentName:"strong"},"thread"),">"),", tambi\xe9n llamado hebra o subproceso, es la unidad b\xe1sica a la que un sistema operativo asigna tiempo de procesamiento. Son los encargados de ejecutar nuestro c\xf3digo sentencia a sentencia. "),(0,o.kt)("p",null,"Por defecto cada proceso tiene un \xfanico hilo, es decir, s\xf3lo puede procesar una tarea a la vez. La ",(0,o.kt)("strong",{parentName:"p"},"programaci\xf3n multi-hilo <",(0,o.kt)("em",{parentName:"strong"},"multithreaded programming"),">")," permite que un proceso se ejecute sobre m\xfaltiples hilos y cada uno de esos hilos est\xe9 realizando una tarea distinta en paralelo. "),(0,o.kt)("p",null,"Todos los hilos de un mismo proceso comparten los mismos recursos asignados por el sistema operativo."),(0,o.kt)("h3",{id:"multitarea-apropiativa"},"Multitarea apropiativa"),(0,o.kt)("p",null,"Por cada n\xfacleo de la CPU, se puede ejecutar a lo mucho un proceso en cada momento. Windows y otros sistemas operativos modernos simulan la ejecuci\xf3n paralela de tareas dividiendo el tiempo de procesamiento entre los hilos, permitiendo que se vayan ejecutando uno despu\xe9s de otro en peque\xf1as fracciones de tiempo. El hilo que se est\xe1 ejecutando es suspendido cuando termina su fracci\xf3n de tiempo, luego el procesador permite que otro hilo se ejecute por el mismo periodo de tiempo. Esta forma de simular el paralelismo recibe el nombre de ",(0,o.kt)("strong",{parentName:"p"},"multitarea apropiativa <",(0,o.kt)("em",{parentName:"strong"},"preemptive multitasking"),">"),". "),(0,o.kt)("p",null,"Cuando Windows cambia de un hilo a otro, guarda el contexto donde se ejecut\xf3 el hilo actual y recarga el contexto del pr\xf3ximo hilo en la cola de ejecuci\xf3n. Hay que ser conscientes de que esto tambi\xe9n consume tiempo y recursos. "),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Advertencia")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"No siempre tener m\xe1s hilos va a mejorar el rendimiento, se deben realizar pruebas de rendimiento comparando la ejecuci\xf3n de procesos con y sin m\xfaltiples hilos."))),(0,o.kt)("p",null,"Cada hilo tiene una ",(0,o.kt)("strong",{parentName:"p"},"pila de ejecuci\xf3n <",(0,o.kt)("em",{parentName:"strong"},"call stack"),">")," independiente, esto significa que cada uno maneja su propia secuencia de funciones a ejecutar. "),(0,o.kt)("p",null,"En algunos tipos de aplicaci\xf3n existen hilos especiales, por ejemplo un hilo para la interfaz de usuario <",(0,o.kt)("em",{parentName:"p"},"UI Thread"),"> o el hilo principal en los programas de consola <",(0,o.kt)("em",{parentName:"p"},"Main Thread"),">."),(0,o.kt)("p",null,"IMAGEN - proceso, hilos, call stack y memoria"),(0,o.kt)("p",null,"Todas las aplicaciones de .NET tienen un ",(0,o.kt)("strong",{parentName:"p"},"conjunto de hilos <",(0,o.kt)("em",{parentName:"strong"},"thread pool"),">")," que se encarga de mantener un n\xfamero de hilos activos esperando para ejecutar cualquier trabajo que se requiera. Lo podemos ver como un lugar donde podemos poner en cola tareas a realizar y que se ajustar\xe1 autom\xe1ticamente de acuerdo a la demanda."),(0,o.kt)("p",null,"En .NET se sol\xeda utilizar la clase ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Thread"))," para trabajar con hilos, la cual es una abstracci\xf3n de bajo nivel. El ",(0,o.kt)("em",{parentName:"p"},"conjunto de hilos")," es una abstracci\xf3n de un nivel un poco m\xe1s alto, ya que se encargar\xe1 por si mismo de instanciar un hilo si existe la necesidad. Actualmente no se recomienda crear instancias de ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Thread"))," ya que existen nuevas soluciones que fueron afinadas para cubrir de forma eficiente y sencilla la gran mayor\xeda de los escenarios reales."),(0,o.kt)("p",null,"Las clases con las que trabajaremos son abstracciones de alto nivel que ponen en cola trabajo para que sea resuelto por el ",(0,o.kt)("em",{parentName:"p"},"conjunto de hilos"),". "),(0,o.kt)("p",null,"IMAGEN - thread vs thread pool vs high level abstractions"),(0,o.kt)("h3",{id:"programaci\xf3n-en-paralelo"},"Programaci\xf3n en paralelo"),(0,o.kt)("p",null,"La ",(0,o.kt)("strong",{parentName:"p"},"programaci\xf3n en paralelo <",(0,o.kt)("em",{parentName:"strong"},"parallel programming"),">")," es un tipo de programaci\xf3n multi-hilo, que a su vez es una forma de concurrencia. Se utiliza cuando se necesita dividir una gran carga de trabajo computacional en partes independientes y ejecutarlas en paralelo, maximizando el uso de los n\xfacleos de la CPU."),(0,o.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"IMPORTANTE")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Cuando procesamos en paralelo cada fragmento de trabajo de ser tan independiente del resto como sea posible. "))),(0,o.kt)("p",null,"IMAGEN - ejemplo en la cocina"),(0,o.kt)("p",null,"Existen dos formas de paralelismo: data parallelism y task parallelism"),(0,o.kt)("p",null,"IMAGEN - tipos de concurrencia y subtipos"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/standard/parallel-programming/task-based-asynchronous-programming"},"https://docs.microsoft.com/en-us/dotnet/standard/parallel-programming/task-based-asynchronous-programming")),(0,o.kt)("p",null,"Parallel.ForEach"),(0,o.kt)("p",null,"Task.Run"),(0,o.kt)("p",null,"Colecciones concurrentes"),(0,o.kt)("h2",{id:"resumen-de-la-secci\xf3n"},"Resumen de la secci\xf3n"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\xbfQu\xe9 significa concurrencia?"),(0,o.kt)("li",{parentName:"ul"},"\xbfQu\xe9 formas de concurrencia existen y cu\xe1ndo se usa cada una?")))}m.isMDXComponent=!0}}]);